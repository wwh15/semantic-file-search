{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\willi\\\\semantic-file-search\\\\semantic-file-search\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n\n// defines React component App as default export from module\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [result, setResult] = React.useState([]);\n\n  // resultArr is updated when result is updated\n  const resultArr = result.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: item.Description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 40\n  }, this)); // creates array of paragraph elements, each item in result is its own paragraph\n\n  // async function to handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // prevents empty form submissions (cause page to refresh)\n\n    try {\n      const response = await fetch('/process_string', {\n        // fetches data from server, awaits until fetched\n        method: 'POST',\n        // sets HTTP method to POST\n        headers: {\n          'Content-Type': 'application/json' // content sent is JSON formatted\n        },\n\n        body: JSON.stringify({\n          inputString: inputValue\n        }) // sends current value of inputValue\n      });\n\n      if (response.ok) {\n        // checks if HTTP response is 200-299\n        const data = await response.json(); // parses JSON response from server, assigns to data, awaits till json parsed\n        setResult(data.output); // updates result with output from parsed response\n      }\n    } catch (error) {\n      console.error('Error:', error); // logs errors to console\n    }\n  };\n\n  // JSX return statement, defines component (App) render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Semantic File Search Engine \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter a search term\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value) // updates inputValue when event object (e) {input} is changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Process \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), result != \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Result: \", resultArr, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Uee7PQLtBCo766YuJQiipI7NDl0=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","_s","inputValue","setInputValue","useState","result","setResult","resultArr","map","item","children","Description","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","inputString","ok","data","json","output","error","console","className","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/willi/semantic-file-search/semantic-file-search/frontend/src/App.js"],"sourcesContent":["import React from \"react\"\r\n\r\n\r\n// defines React component App as default export from module\r\nexport default function App() {\r\n\r\n  const [inputValue, setInputValue] = React.useState(\"\") \r\n  const [result, setResult] = React.useState([]) \r\n\r\n  // resultArr is updated when result is updated\r\n  const resultArr = result.map(item => <p>{item.Description}</p>) // creates array of paragraph elements, each item in result is its own paragraph\r\n\r\n  // async function to handle form submission\r\n  const handleSubmit = async (e) => { \r\n    e.preventDefault(); // prevents empty form submissions (cause page to refresh)\r\n\r\n    try {\r\n      const response = await fetch('/process_string', { // fetches data from server, awaits until fetched\r\n        method: 'POST', // sets HTTP method to POST\r\n        headers: {\r\n          'Content-Type': 'application/json', // content sent is JSON formatted\r\n        },\r\n        body: JSON.stringify({ inputString: inputValue }), // sends current value of inputValue\r\n      });\r\n\r\n      if (response.ok) { // checks if HTTP response is 200-299\r\n        const data = await response.json(); // parses JSON response from server, assigns to data, awaits till json parsed\r\n        setResult(data.output); // updates result with output from parsed response\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error); // logs errors to console\r\n    }\r\n  };\r\n\r\n\r\n  // JSX return statement, defines component (App) render\r\n  return (\r\n    <div className = \"App\"> \r\n        {/*renders heading for component*/}\r\n        <h1> Semantic File Search Engine </h1> \r\n\r\n        {/*creates form element onSubmit, when form is submitted handleSubmit called*/}\r\n        <form onSubmit = {handleSubmit}> \r\n          {/*renders input search bar, value bound to inputValue*/}\r\n          <input \r\n            type = \"text\"\r\n            placeholder = \"Enter a search term\"\r\n            value = {inputValue}\r\n            onChange = {(e) => setInputValue(e.target.value)} // updates inputValue when event object (e) {input} is changed\r\n          />\r\n          {/*renders button that submits form*/}\r\n          <button type = \"submit\"> Process </button>\r\n        </form>\r\n\r\n        {/*renders paragraph containing results only result is not empty*/}\r\n        {result != \"\" && <p> Result: {resultArr} </p>} \r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;;AAGzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAE5B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,KAAK,CAACO,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,KAAK,CAACO,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAMG,SAAS,GAAGF,MAAM,CAACG,GAAG,CAACC,IAAI,iBAAIV,OAAA;IAAAW,QAAA,EAAID,IAAI,CAACE;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,CAAC,EAAC;;EAEhE;EACA,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAEpB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;QAAE;QAChDC,MAAM,EAAE,MAAM;QAAE;QAChBC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB,CAAE;QACtC,CAAC;;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,WAAW,EAAExB;QAAW,CAAC,CAAC,CAAE;MACrD,CAAC,CAAC;;MAEF,IAAIiB,QAAQ,CAACQ,EAAE,EAAE;QAAE;QACjB,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAAC,CAAC;QACpCvB,SAAS,CAACsB,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC;MAC1B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC,CAAC;IAClC;EACF,CAAC;;EAGD;EACA,oBACEhC,OAAA;IAAKkC,SAAS,EAAG,KAAK;IAAAvB,QAAA,gBAElBX,OAAA;MAAAW,QAAA,EAAI;IAA6B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGtChB,OAAA;MAAMmC,QAAQ,EAAIlB,YAAa;MAAAN,QAAA,gBAE7BX,OAAA;QACEoC,IAAI,EAAG,MAAM;QACbC,WAAW,EAAG,qBAAqB;QACnCC,KAAK,EAAInC,UAAW;QACpBoC,QAAQ,EAAKrB,CAAC,IAAKd,aAAa,CAACc,CAAC,CAACsB,MAAM,CAACF,KAAK,CAAE,CAAC;MAAA;QAAAzB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eAEFhB,OAAA;QAAQoC,IAAI,EAAG,QAAQ;QAAAzB,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,EAGNV,MAAM,IAAI,EAAE,iBAAIN,OAAA;MAAAW,QAAA,GAAG,WAAS,EAACH,SAAS,EAAC,GAAC;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV;AAACd,EAAA,CAtDuBD,GAAG;AAAAwC,EAAA,GAAHxC,GAAG;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}