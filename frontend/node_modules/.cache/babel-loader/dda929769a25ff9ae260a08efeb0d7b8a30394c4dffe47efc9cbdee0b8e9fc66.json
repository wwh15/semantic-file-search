{"ast":null,"code":"var _jsxFileName = \"/Users/peter_liu/projectHack/semantic-file-search/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n\n// defines React component App as default export from module\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [matches, setMatches] = React.useState(0);\n  const [result, setResult] = React.useState([]);\n\n  // resultArr is updated when result is updated\n  function Rating({\n    value\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rating\",\n      children: [...Array(5)].map((_, index) => /*#__PURE__*/_jsxDEV(Star, {\n        filled: index < value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n  const resultArr = result.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"result-name\",\n      children: item.Name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"result-description\",\n      children: item.Description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"result-rating\",\n      children: [\"Rating: \", item.Rating, \"/5 \", /*#__PURE__*/_jsxDEV(Rating, {\n        value: item.Rating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"result-genre\",\n      children: [\"Genre: \", item.Genre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 6\n  }, this)); // creates array of paragraph elements, each item in result is its own paragraph\n\n  // async function to handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // prevents empty form submissions (cause page to refresh)\n\n    try {\n      const response = await fetch('/process_string', {\n        // fetches data from server, awaits until fetched\n        method: 'POST',\n        // sets HTTP method to POST\n        headers: {\n          'Content-Type': 'application/json' // content sent is JSON formatted\n        },\n\n        body: JSON.stringify({\n          inputString: inputValue,\n          number: matches\n        }) // sends current value of inputValue\n      });\n\n      if (response.ok) {\n        // checks if HTTP response is 200-299\n        const data = await response.json(); // parses JSON response from server, assigns to data, awaits till json parsed\n        setResult(data.output); // updates result with output from parsed response\n      }\n    } catch (error) {\n      console.error('Error:', error); // logs errors to console\n    }\n  };\n\n  // JSX return statement, defines component (App) render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Semantic Podcast Search Engine \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter a search term\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"How many entries?\",\n        value: matches,\n        onChange: e => setMatches(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Search \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), result.length > 0 && resultArr]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZJNzMd+GKtANetBwIvm7K9reYoI=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","_s","inputValue","setInputValue","useState","matches","setMatches","result","setResult","Rating","value","className","children","Array","map","_","index","Star","filled","fileName","_jsxFileName","lineNumber","columnNumber","resultArr","item","Name","Description","Genre","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","inputString","number","ok","data","json","output","error","console","onSubmit","type","placeholder","onChange","target","length","_c","$RefreshReg$"],"sources":["/Users/peter_liu/projectHack/semantic-file-search/frontend/src/App.js"],"sourcesContent":["import React from \"react\"\n\n// defines React component App as default export from module\nexport default function App() {\n\n  const [inputValue, setInputValue] = React.useState(\"\") \n  const [matches, setMatches] = React.useState(0)\n  const [result, setResult] = React.useState([]) \n\n  // resultArr is updated when result is updated\n  function Rating({ value }) {\n    return (\n      <div className=\"rating\">\n        {[...Array(5)].map((_, index) => (\n          <Star key={index} filled={index < value} />\n        ))}\n      </div>\n    );\n  }\n\n  const resultArr = result.map(item =>\n     <div className=\"result\">\n      <h1 className=\"result-name\">\n        {item.Name} \n      </h1>\n      <p className=\"result-description\">\n        {item.Description}\n      </p>\n      <p className = \"result-rating\">\n        Rating: {item.Rating}/5 <Rating value={item.Rating} />\n      </p>\n      <p className = \"result-genre\">\n        Genre: {item.Genre}\n      </p>\n     </div>\n     ) // creates array of paragraph elements, each item in result is its own paragraph\n\n  // async function to handle form submission\n  const handleSubmit = async (e) => { \n    e.preventDefault(); // prevents empty form submissions (cause page to refresh)\n\n    try {\n      const response = await fetch('/process_string', { // fetches data from server, awaits until fetched\n        method: 'POST', // sets HTTP method to POST\n        headers: {\n          'Content-Type': 'application/json', // content sent is JSON formatted\n        },\n        body: JSON.stringify({ inputString: inputValue, number: matches }), // sends current value of inputValue\n      });\n\n      if (response.ok) { // checks if HTTP response is 200-299\n        const data = await response.json(); // parses JSON response from server, assigns to data, awaits till json parsed\n        setResult(data.output); // updates result with output from parsed response\n      }\n    } catch (error) {\n      console.error('Error:', error); // logs errors to console\n    }\n  };\n\n\n  // JSX return statement, defines component (App) render\n  return (\n    <div className=\"App\"> \n      <h1> Semantic Podcast Search Engine </h1> \n  \n      <form onSubmit={handleSubmit}> \n        <input \n          type=\"text\"\n          placeholder=\"Enter a search term\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n  \n        <input\n          type=\"number\"\n          placeholder=\"How many entries?\"\n          value={matches}\n          onChange={(e) => setMatches(e.target.value)}\n        />\n  \n        <button type=\"submit\"> Search </button>\n      </form>\n  \n      {/* Renders the results only if result array has items */}\n      {result.length > 0 && resultArr} \n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}