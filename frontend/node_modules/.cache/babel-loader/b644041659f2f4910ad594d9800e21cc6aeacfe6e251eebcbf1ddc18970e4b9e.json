{"ast":null,"code":"var _jsxFileName = \"/Users/peter_liu/projectHack/semantic-file-search/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n\n// defines React component App as default export from module\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [matches, setMatches] = React.useState(0);\n  const [result, setResult] = React.useState([]);\n\n  // resultArr is updated when result is updated\n  const resultArr = result.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result\",\n    children: [\"/*\", /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"result-name\",\n      children: item.Name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"result-description\",\n      children: item.Description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"result-rating\",\n      children: [\"Rating: \", item.Rating, \"/5\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"result-genre\",\n      children: [\"Genre: \", item.Genre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 6\n  }, this)); // creates array of paragraph elements, each item in result is its own paragraph\n\n  // async function to handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // prevents empty form submissions (cause page to refresh)\n\n    try {\n      const response = await fetch('/process_string', {\n        // fetches data from server, awaits until fetched\n        method: 'POST',\n        // sets HTTP method to POST\n        headers: {\n          'Content-Type': 'application/json' // content sent is JSON formatted\n        },\n\n        body: JSON.stringify({\n          inputString: inputValue,\n          number: matches\n        }) // sends current value of inputValue\n      });\n\n      if (response.ok) {\n        // checks if HTTP response is 200-299\n        const data = await response.json(); // parses JSON response from server, assigns to data, awaits till json parsed\n        setResult(data.output); // updates result with output from parsed response\n      }\n    } catch (error) {\n      console.error('Error:', error); // logs errors to console\n    }\n  };\n\n  // JSX return statement, defines component (App) render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Semantic Podcast Search Engine \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter a search term\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value) // updates inputValue when event object (e) {input} is changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"How many entries?\",\n        value: matches,\n        onChange: e => setMatches(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Process \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), result != \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Result: \", resultArr, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZJNzMd+GKtANetBwIvm7K9reYoI=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","_s","inputValue","setInputValue","useState","matches","setMatches","result","setResult","resultArr","map","item","className","children","Name","fileName","_jsxFileName","lineNumber","columnNumber","Description","Rating","Genre","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","inputString","number","ok","data","json","output","error","console","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/peter_liu/projectHack/semantic-file-search/frontend/src/App.js"],"sourcesContent":["import React from \"react\"\n\n// defines React component App as default export from module\nexport default function App() {\n\n  const [inputValue, setInputValue] = React.useState(\"\") \n  const [matches, setMatches] = React.useState(0)\n  const [result, setResult] = React.useState([]) \n\n  // resultArr is updated when result is updated\n  const resultArr = result.map(item =>\n     <div className=\"result\">\n      /*\n      <h1 className=\"result-name\">\n        {item.Name} \n      </h1>\n      <p className=\"result-description\">\n        {item.Description}\n      </p>\n      <p className = \"result-rating\">\n        Rating: {item.Rating}/5\n      </p>\n      <p className = \"result-genre\">\n        Genre: {item.Genre}\n      </p>\n     </div>\n     ) // creates array of paragraph elements, each item in result is its own paragraph\n\n  // async function to handle form submission\n  const handleSubmit = async (e) => { \n    e.preventDefault(); // prevents empty form submissions (cause page to refresh)\n\n    try {\n      const response = await fetch('/process_string', { // fetches data from server, awaits until fetched\n        method: 'POST', // sets HTTP method to POST\n        headers: {\n          'Content-Type': 'application/json', // content sent is JSON formatted\n        },\n        body: JSON.stringify({ inputString: inputValue, number: matches }), // sends current value of inputValue\n      });\n\n      if (response.ok) { // checks if HTTP response is 200-299\n        const data = await response.json(); // parses JSON response from server, assigns to data, awaits till json parsed\n        setResult(data.output); // updates result with output from parsed response\n      }\n    } catch (error) {\n      console.error('Error:', error); // logs errors to console\n    }\n  };\n\n\n  // JSX return statement, defines component (App) render\n  return (\n    <div className = \"App\"> \n        {/*renders heading for component*/}\n        <h1> Semantic Podcast Search Engine </h1> \n\n        {/*creates form element onSubmit, when form is submitted handleSubmit called*/}\n        <form onSubmit = {handleSubmit}> \n          {/*renders input search bar, value bound to inputValue*/}\n          <input \n            type = \"text\"\n            placeholder = \"Enter a search term\"\n            value = {inputValue}\n            onChange = {(e) => setInputValue(e.target.value)} // updates inputValue when event object (e) {input} is changed\n          />\n          {/* renders number input for how many entries on screen */}\n          <input\n            type = \"number\"\n            placeholder = \"How many entries?\"\n            value = {matches}\n            onChange={(e) => setMatches(e.target.value)}\n          />\n          {/*renders button that submits form*/}\n          <button type = \"submit\"> Process </button>\n        </form>\n\n        {/*renders paragraph containing results only result is not empty*/}\n        {result != \"\" && <p> Result: {resultArr} </p>} \n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}