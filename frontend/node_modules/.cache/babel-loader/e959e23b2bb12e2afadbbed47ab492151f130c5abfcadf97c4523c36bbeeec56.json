{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\willi\\\\semantic-file-search\\\\semantic-file-search\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n\n// defines React component App as default export from module\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [matches, setMatches] = React.useState(10);\n  const [result, setResult] = React.useState([]);\n  function Star({\n    percentage\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"star\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"star-empty\",\n        children: \"\\u2606\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"star-fill\",\n        style: {\n          width: `${percentage}%`\n        },\n        children: \"\\u2605\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n  function Rating({\n    value\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rating\",\n      children: [...Array(5)].map((_, index) => {\n        const fillPercentage = Math.min(Math.max((value - index) * 100, 0), 100);\n        return /*#__PURE__*/_jsxDEV(Star, {\n          percentage: fillPercentage\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n  // resultArr is updated when result is updated\n  const resultArr = result.map(item => {\n    const roundedRating = Math.round(item.Rating * 100) / 100;\n    const isRatingValid = !isNaN(roundedRating) && item.Rating !== null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"result-name\",\n        children: item.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"result-rating\",\n        children: isRatingValid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [roundedRating, \" \", /*#__PURE__*/_jsxDEV(Rating, {\n            value: roundedRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 41\n          }, this), \" \", item.Rating_Volume, \" Reviews\"]\n        }, void 0, true) : \"No reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"result-description\",\n        children: item.Description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"result-genre\",\n        children: [\"Genre: \", item.Genre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this);\n  }); // creates array of paragraph elements, each item in result is its own paragraph\n\n  // async function to handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // prevents empty form submissions (cause page to refresh)\n\n    try {\n      const response = await fetch('/process_string', {\n        // fetches data from server, awaits until fetched\n        method: 'POST',\n        // sets HTTP method to POST\n        headers: {\n          'Content-Type': 'application/json' // content sent is JSON formatted\n        },\n\n        body: JSON.stringify({\n          inputString: inputValue,\n          number: matches\n        }) // sends current value of inputValue\n      });\n\n      if (response.ok) {\n        // checks if HTTP response is 200-299\n        const data = await response.json(); // parses JSON response from server, assigns to data, awaits till json parsed\n        setResult(data.output); // updates result with output from parsed response\n      }\n    } catch (error) {\n      console.error('Error:', error); // logs errors to console\n    }\n  };\n\n  // JSX return statement, defines component (App) render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \" Semantic Podcast Search Engine \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter a search term\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"How many entries?\",\n        value: matches,\n        onChange: e => setMatches(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Search \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), result.length > 0 && resultArr]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dEnMdc6feMavIy5bOFjazXF0YX0=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","inputValue","setInputValue","useState","matches","setMatches","result","setResult","Star","percentage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","Rating","value","Array","map","_","index","fillPercentage","Math","min","max","resultArr","item","roundedRating","round","isRatingValid","isNaN","Name","Rating_Volume","Description","Genre","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","inputString","number","ok","data","json","output","error","console","onSubmit","type","placeholder","onChange","target","length","_c","$RefreshReg$"],"sources":["C:/Users/willi/semantic-file-search/semantic-file-search/frontend/src/App.js"],"sourcesContent":["import React from \"react\"\r\n\r\n// defines React component App as default export from module\r\nexport default function App() {\r\n\r\n  const [inputValue, setInputValue] = React.useState(\"\") \r\n  const [matches, setMatches] = React.useState(10)\r\n  const [result, setResult] = React.useState([]) \r\n\r\n\r\n  function Star({ percentage }) {\r\n    return (\r\n      <div className=\"star\">\r\n        <span className=\"star-empty\">☆</span>\r\n        <div className=\"star-fill\" style={{ width: `${percentage}%` }}>\r\n          ★\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  function Rating({ value }) {\r\n    return (\r\n      <div className=\"rating\">\r\n        {[...Array(5)].map((_, index) => {\r\n          const fillPercentage = Math.min(Math.max((value - index) * 100, 0), 100);\r\n          return <Star key={index} percentage={fillPercentage} />;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // resultArr is updated when result is updated\r\n    const resultArr = result.map(item => {\r\n    const roundedRating = Math.round(item.Rating * 100) / 100;\r\n    const isRatingValid = !isNaN(roundedRating) && item.Rating !== null;\r\n    \r\n    return (\r\n        <div className=\"result\">\r\n            <h1 className=\"result-name\">\r\n                {item.Name} \r\n            </h1>\r\n            <p className=\"result-rating\">\r\n                {isRatingValid \r\n                    ? <>\r\n                        {roundedRating} <Rating value={roundedRating} /> {item.Rating_Volume} Reviews\r\n                      </>\r\n                    : \"No reviews\"\r\n                }\r\n            </p>\r\n            <p className=\"result-description\">\r\n                {item.Description}\r\n            </p>\r\n            <p className=\"result-genre\">\r\n                Genre: {item.Genre}\r\n            </p>\r\n        </div>\r\n    );\r\n});// creates array of paragraph elements, each item in result is its own paragraph\r\n\r\n\r\n  // async function to handle form submission\r\n  const handleSubmit = async (e) => { \r\n    e.preventDefault(); // prevents empty form submissions (cause page to refresh)\r\n\r\n    try {\r\n      const response = await fetch('/process_string', { // fetches data from server, awaits until fetched\r\n        method: 'POST', // sets HTTP method to POST\r\n        headers: {\r\n          'Content-Type': 'application/json', // content sent is JSON formatted\r\n        },\r\n        body: JSON.stringify({ inputString: inputValue, number: matches }), // sends current value of inputValue\r\n      });\r\n\r\n      if (response.ok) { // checks if HTTP response is 200-299\r\n        const data = await response.json(); // parses JSON response from server, assigns to data, awaits till json parsed\r\n        setResult(data.output); // updates result with output from parsed response\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error); // logs errors to console\r\n    }\r\n  };\r\n\r\n\r\n  // JSX return statement, defines component (App) render\r\n  return (\r\n    <div className=\"App\"> \r\n      <h1 className=\"title\"> Semantic Podcast Search Engine </h1> \r\n  \r\n      <form onSubmit={handleSubmit}> \r\n        <input \r\n          type=\"text\"\r\n          placeholder=\"Enter a search term\"\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n        />\r\n  \r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"How many entries?\"\r\n          value={matches}\r\n          onChange={(e) => setMatches(e.target.value)}\r\n        />\r\n  \r\n        <button type=\"submit\"> Search </button>\r\n      </form>\r\n  \r\n      {/* Renders the results only if result array has items */}\r\n      {result.length > 0 && resultArr} \r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}