{"ast":null,"code":"var _jsxFileName = \"/Users/peter_liu/projectHack/semantic-file-search/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n\n// defines React component App as default export from module\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [matches, setMatches] = React.useState(0);\n  const [result, setResult] = React.useState([]);\n  function Star({\n    percentage\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"star\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"star-empty\",\n        children: \"\\u2606\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"star-fill\",\n        style: {\n          width: `${percentage}%`\n        },\n        children: \"\\u2605\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n  // resultArr is updated when result is updated\n  function Rating({\n    value\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rating\",\n      children: [...Array(5)].map((_, index) => {\n        const fillPercentage = Math.min(Math.max((value - index) * 100, 0), 100);\n        return /*#__PURE__*/_jsxDEV(Star, {\n          percentage: fillPercentage\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n  const resultArr = result.map(item => {\n    const roundedRating = Math.round(item.Rating * 100) / 100;\n\n    // Check if roundedRating is NaN\n    const isRatingValid = !isNaN(roundedRating);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"result-name\",\n        children: item.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"result-rating\",\n        children: isRatingValid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [roundedRating, \" \", /*#__PURE__*/_jsxDEV(Rating, {\n            value: roundedRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true) : \"No reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"result-description\",\n        children: item.Description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"result-genre\",\n        children: [\"Genre: \", item.Genre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this);\n  }); // creates array of paragraph elements, each item in result is its own paragraph\n\n  // async function to handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // prevents empty form submissions (cause page to refresh)\n\n    try {\n      const response = await fetch('/process_string', {\n        // fetches data from server, awaits until fetched\n        method: 'POST',\n        // sets HTTP method to POST\n        headers: {\n          'Content-Type': 'application/json' // content sent is JSON formatted\n        },\n\n        body: JSON.stringify({\n          inputString: inputValue,\n          number: matches\n        }) // sends current value of inputValue\n      });\n\n      if (response.ok) {\n        // checks if HTTP response is 200-299\n        const data = await response.json(); // parses JSON response from server, assigns to data, awaits till json parsed\n        setResult(data.output); // updates result with output from parsed response\n      }\n    } catch (error) {\n      console.error('Error:', error); // logs errors to console\n    }\n  };\n\n  // JSX return statement, defines component (App) render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Semantic Podcast Search Engine \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter a search term\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"How many entries?\",\n        value: matches,\n        onChange: e => setMatches(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Search \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), result.length > 0 && resultArr]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZJNzMd+GKtANetBwIvm7K9reYoI=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","inputValue","setInputValue","useState","matches","setMatches","result","setResult","Star","percentage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","Rating","value","Array","map","_","index","fillPercentage","Math","min","max","resultArr","item","roundedRating","round","isRatingValid","isNaN","Name","Description","Genre","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","inputString","number","ok","data","json","output","error","console","onSubmit","type","placeholder","onChange","target","length","_c","$RefreshReg$"],"sources":["/Users/peter_liu/projectHack/semantic-file-search/frontend/src/App.js"],"sourcesContent":["import React from \"react\"\n\n// defines React component App as default export from module\nexport default function App() {\n\n  const [inputValue, setInputValue] = React.useState(\"\") \n  const [matches, setMatches] = React.useState(0)\n  const [result, setResult] = React.useState([]) \n\n\n  function Star({ percentage }) {\n    return (\n      <div className=\"star\">\n        <span className=\"star-empty\">☆</span>\n        <div className=\"star-fill\" style={{ width: `${percentage}%` }}>\n          ★\n        </div>\n      </div>\n    );\n  }\n  // resultArr is updated when result is updated\n  function Rating({ value }) {\n    return (\n      <div className=\"rating\">\n        {[...Array(5)].map((_, index) => {\n          const fillPercentage = Math.min(Math.max((value - index) * 100, 0), 100);\n          return <Star key={index} percentage={fillPercentage} />;\n        })}\n      </div>\n    );\n  }\n\n  const resultArr = result.map(item => {\n    const roundedRating = Math.round(item.Rating * 100) / 100;\n\n    // Check if roundedRating is NaN\n    const isRatingValid = !isNaN(roundedRating);\n    \n    return (\n        <div className=\"result\">\n            <h1 className=\"result-name\">\n                {item.Name} \n            </h1>\n            \n            <p className=\"result-rating\">\n            {isRatingValid \n                ? <>\n        {roundedRating} <Rating value={roundedRating} />\n      </>\n    : \"No reviews\"\n}\n\n            </p>\n\n            <p className=\"result-description\">\n                {item.Description}\n            </p>\n            <p className=\"result-genre\">\n                Genre: {item.Genre}\n            </p>\n        </div>\n    );\n});// creates array of paragraph elements, each item in result is its own paragraph\n\n  // async function to handle form submission\n  const handleSubmit = async (e) => { \n    e.preventDefault(); // prevents empty form submissions (cause page to refresh)\n\n    try {\n      const response = await fetch('/process_string', { // fetches data from server, awaits until fetched\n        method: 'POST', // sets HTTP method to POST\n        headers: {\n          'Content-Type': 'application/json', // content sent is JSON formatted\n        },\n        body: JSON.stringify({ inputString: inputValue, number: matches }), // sends current value of inputValue\n      });\n\n      if (response.ok) { // checks if HTTP response is 200-299\n        const data = await response.json(); // parses JSON response from server, assigns to data, awaits till json parsed\n        setResult(data.output); // updates result with output from parsed response\n      }\n    } catch (error) {\n      console.error('Error:', error); // logs errors to console\n    }\n  };\n\n\n  // JSX return statement, defines component (App) render\n  return (\n    <div className=\"App\"> \n      <h1> Semantic Podcast Search Engine </h1> \n  \n      <form onSubmit={handleSubmit}> \n        <input \n          type=\"text\"\n          placeholder=\"Enter a search term\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n  \n        <input\n          type=\"number\"\n          placeholder=\"How many entries?\"\n          value={matches}\n          onChange={(e) => setMatches(e.target.value)}\n        />\n  \n        <button type=\"submit\"> Search </button>\n      </form>\n  \n      {/* Renders the results only if result array has items */}\n      {result.length > 0 && resultArr} \n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}