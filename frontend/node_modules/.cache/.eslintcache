[{"C:\\Users\\willi\\semantic-file-search\\semantic-file-search\\frontend\\src\\index.js":"1","C:\\Users\\willi\\semantic-file-search\\semantic-file-search\\frontend\\src\\App.js":"2"},{"size":220,"mtime":1694270070185,"results":"3","hashOfConfig":"4"},{"size":1638,"mtime":1694280795529,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1g21d6o",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"C:\\Users\\willi\\semantic-file-search\\semantic-file-search\\frontend\\src\\index.js",[],[],"C:\\Users\\willi\\semantic-file-search\\semantic-file-search\\frontend\\src\\App.js",["13"],[],"import React from \"react\"\r\n\r\nexport default function App() {\r\n\r\n  const [inputValue, setInputValue] = React.useState(\"\")\r\n  const [result, setResult] = React.useState(\"\")\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('/add_one', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ number: parseInt(inputValue) }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setResult(data.result);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  \r\n//   // Using useEffect for single rendering\r\n//   React.useEffect(() => {\r\n//     // Using fetch to fetch the api from\r\n//     // flask server it will be redirected to proxy\r\n//     fetch(\"/data\").then((res) =>\r\n//         res.json().then((data) => {\r\n//             // Setting a data from api\r\n//             setData({\r\n//                 name: data.Name,\r\n//                 age: data.Age,\r\n//                 date: data.Date,\r\n//                 programming: data.programming,\r\n//             });\r\n//         })\r\n//     );\r\n// }, []);\r\n\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n        <h1>Semantic File Search Engine</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Enter a number\"\r\n            value = {inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n          />\r\n        </form>\r\n\r\n        {result != \"\" && <p>Result: {result}</p>}\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n",{"ruleId":"14","severity":1,"message":"15","line":59,"column":17,"nodeType":"16","messageId":"17","endLine":59,"endColumn":19},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]